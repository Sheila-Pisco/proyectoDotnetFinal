@rendermode InteractiveServer

@if(visible){
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <h3>@Mensaje</h3>
            <button class="btn btn-primary" @onclick="()=>Cerrar(true)">Aceptar</button>
            <button class="btn btn-secondary" @onclick="()=>Cerrar(false)">Cancelar</button>
        </div>
    </div>
}

@code {
    private bool visible = false; 
    [Parameter]
    public string Mensaje {get; set;} = "";
    [Parameter]
    public EventCallback OnConfirmado {get; set;} // Se declara el evento OnConfirmado. El tipo EventCallback permite la asignación de un delegado Action 
    public void Mostrar()
    {
        visible = true;
        StateHasChanged();
    }
    void Cerrar(bool confirmar)
    {
        visible = false; 
        if(confirmar)
        {
            OnConfirmado.InvokeAsync(); // Se ejecuta el delegado que se haya asignado a la propiedad OnConfirmado 
        }
    }
}
