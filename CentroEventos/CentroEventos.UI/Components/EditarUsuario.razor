@using CentroEventos.Aplicacion.Enumerativos
@page "/usuario/{Id:int?}"
@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject UsuarioObtenerUseCase UsuariobtenerUseCase
@inject UsuarioModificacionesUseCase UsuarioModificacionesUseCase
@inject UsuarioAltaUseCase UsuarioAltaUseCase
@inject ServicioLogin servicioLogin


@if(_esNuevo){
    <div class="text-center" style="padding-top: 30px;"><h3>Agregar Usuario</h3></div>
}else{
    <div class="text-center" style="padding-top: 30px;"><h3>Modificando Usuario: @_usuario.Nombre</h3></div>
}
<div class="container-fluid justify-content-center align-items-center min-vh-100 p-5" style="max-width: 900px;">
    <div class="text-center border p-4 rounded shadow-sm bg-light" >
        <div class="mb-3">
            <input placeholder="Nombre" @bind="_usuario.Nombre" class="form-control w-70 mb-2 ">
            <input placeholder="Apellido" @bind="_usuario.Apellido" class="form-control w-70 mb-2">
            <input placeholder="Email" @bind="_usuario.Email" class="form-control w-70 mb-2">
            <input type="password" placeholder="Contraseña"  @bind="_usuario.Contraseña" class="form-control w-70 mb-2">
            <table style="margin-top: 25px;" class="table">
                <thead>
                    <td colspan="3">Permisos</td>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.UsuarioAlta) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.UsuarioAlta, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Usuario Alta </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.UsuarioBaja) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.UsuarioBaja, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Usuario Baja </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.UsuarioModificacion) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.UsuarioModificacion, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Usuario Modificacion </label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.PersonaAlta) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.PersonaAlta, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Persona Alta </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.PersonaBaja) ?? false)"
                                    @onchange="(e)=>OnPermisoChanged(Permiso.PersonaBaja, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Persona Baja </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.PersonaModificacion) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.PersonaModificacion, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Persona Modificacion </label>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.EventoAlta) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.EventoAlta, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Evento Alta </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.EventoBaja) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.EventoBaja, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Evento Baja </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.EventoModificacion) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.EventoModificacion, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Evento Modificacion </label>
                            </div>
                        </td>
                    </tr>
                   <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.ReservaAlta) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.ReservaAlta, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Reserva Alta </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.ReservaBaja) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.ReservaBaja, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Reserva Baja </label>
                            </div>
                        </td>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" 
                                    checked="@(_usuario.Permisos?.Contains(Permiso.ReservaModificacion) ?? false)" 
                                    @onchange="(e)=>OnPermisoChanged(Permiso.ReservaModificacion, ((ChangeEventArgs)e).Value!)">
                                <label class="form-check-label" for="flexCheckDefault">Reserva Modificacion </label>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        @if(servicioLogin.User != null && ((_esNuevo && servicioLogin.User.Permisos.Contains(Permiso.UsuarioAlta)) || (!_esNuevo && servicioLogin.User.Permisos.Contains(Permiso.UsuarioModificacion))))
        {
            <div class="boton mb-3">
                <button class="btn btn-outline-success me-2" @onclick="Aceptar">Aceptar</button>
                <button class="btn btn-outline-secondary me-2" @onclick="Cancelar">Cancelar</button>
            </div>
        }
    </div>
    @if (!string.IsNullOrEmpty(MensajeError)) //muestra el mensaje de error en pantalla
    {
        <div class="alert alert-danger" style="marging-top: 10px;">@MensajeError</div>
    }
</div>

@code {
    Usuario _usuario = new Usuario();
    [Parameter] public int? Id { get; set; }
    bool _esNuevo = true;
    protected override void OnParametersSet()
    {
        if(Id !=null) {
            var usObtenido = UsuariobtenerUseCase.Ejecutar(Id.Value);
            if(usObtenido != null) {
                _usuario = usObtenido;
                _esNuevo = false;
            }
        }
    }
    protected void OnPermisoChanged(Permiso permiso, object checkedValue)
    {
        bool isChecked = false;
        if(checkedValue is bool) isChecked = (bool)checkedValue; 

        if(isChecked) {
            if(!_usuario.Permisos.Contains(permiso)) _usuario.Permisos.Add(permiso);
        }
        else {
            if(_usuario.Permisos.Contains(permiso)) _usuario.Permisos.Remove(permiso);
        }
    }
    string? MensajeError;
    void Aceptar()
    {
        try
        {
            if(_esNuevo) {
                UsuarioAltaUseCase.Ejecutar(_usuario, servicioLogin.User!.Id,true);
            } else {
                UsuarioModificacionesUseCase.Ejecutar(_usuario, servicioLogin.User!.Id,false);
            }
            MensajeError = null; //Limpia el mensaje si todo sale bien
        }
        catch (Exception ex)
        {
            MensajeError = ex.Message; //Guarda el mensaje de error
        }
        _usuario = new Usuario();
        if(MensajeError == null) 
        {
            Navegador.NavigateTo("listadousuarios");
        }
    }
    void Cancelar()
    {
        Navegador.NavigateTo("listadousuarios");
    }
}
