@page "/evento/{Id:int?}"
@rendermode InteractiveServer
@inject NavigationManager Navegador; //Inyectamos un objeto Navigator que nos permite navegar entre las páginas
@inject EventoDeportivoAltaUseCase EventoDeportivoAltaUseCase
@inject EventoDeportivoModificacionUseCase EventoDeportivoModificacionUseCase
@inject EventoDeportivoObtenerUseCase EventoDeportivoObtenerUseCase

@if(_esNuevoEvento)
{
    <h3 class="mx-auto" style="width: fit-content;">Agregar Evento Deportivo</h3>
}
else 
{
    <h3 class="mx-auto" style="width: fit-content;">Modificar Evento Deportivo "@_evento.Nombre"</h3>
}

<div class="container-fluid justify-content-center align-items-center min-vh-100 p-5" style="max-width: 900px;">
    <div class="text-center border p-4 rounded shadow-sm bg-light" >
        <div class="mb-3">
            <input placeholder="Nombre" @bind="_evento.Nombre" class="form-control"> 
            <input placeholder="Descripcion" @bind="_evento.Descripcion" class="form-control">
            <input placeholder="Fecha y hora de inicio" @bind="_evento.FechaHoraInicio" class="form-control"> 
            <input placeholder="Duración (horas)" @bind="_evento.DuracionHoras" class="form-control"> 
            <input placeholder="Cupo máximo" @bind="_evento.CupoMaximo" class="form-control"> 
            <input placeholder="Id del reponsable" @bind="_evento.ResponsableId" class="form-control">  
        </div>
        <div class="boton mb-3">
            <button class="btn btn-outline-success" @onclick="Aceptar">Aceptar</button>
            <button class="btn btn-outline-secondary me-2" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
</div>


@code {
    EventoDeportivo _evento = new EventoDeportivo();
    [Parameter] public int? Id {get; set;} //Debe coincidir con el parámetro de ruta de la directiva @page
    bool _esNuevoEvento = true;
    protected override void OnParametersSet() //Este método se invoca cuando el componente ha recibido parámetros y los valores entrantes se han asignado a las propiedades
    {
        if(Id != null)
        {
            var evento_hallado = EventoDeportivoObtenerUseCase.Ejecutar(Id);
            if(evento_hallado != null)
            {
                _evento = evento_hallado;
                _esNuevoEvento = false; 
            } 
        }
    }
    void Aceptar()
    {
        if(_esNuevoEvento)
        {
            EventoDeportivoAltaUseCase.Ejecutar(_evento,1);
        }
        else
        {   
            /*
            <DialogoConfirmacion @ref=dialogo OnConfirmado="Editar" Mensaje="@_mensajeDialogo"/>
             DialogoConfirmacion dialogo = null!;
            EventoDeportivo? _eventoParaEditar = null; 
            private void ConfirmarEdicion(EventoDeportivo evento)
            {
                _eventoParaEditar = evento;
                _mensajeDialogo = $"¿Desea editar el evento {evento.Id} {evento.Nombre}?";
                dialogo.Mostrar();
            }
            */
            EventoDeportivoModificacionUseCase.Ejecutar(_evento,1);
        }
        _evento = new EventoDeportivo();
        Navegador.NavigateTo("listadoeventos");
    }
    void Cancelar(){
        Navegador.NavigateTo("/");
    }

}
