@inject ServicioLogin servicioLogin
@implements IDisposable
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<div class="top-row ps-3">
    <div>
        @if (servicioLogin.User != null) 
        {
            <span style="margin-right: 10px; color:#fff;">@servicioLogin.User.ToString()</span>
            <button class="boton-inicio" @onclick="CerrarSesion">Cerrar Sesión</button>
        }
        else 
        {
            <button class="boton-inicio" @onclick="IniciarSesion">Iniciar Sesión</button>
            @*una vez que el usuario se logea, se dispara un evento en ServicioLogin. TopRow suscribe a dicho evento
            para "saber" cuándo actualizar su estado (cambiar la opción "Iniciar Sesión" por la opción "Cerrar Sesion" y viceversa) *@
        }
    </div>   
</div>

@code {
    protected override void OnInitialized()
    {
        servicioLogin.UsuarioLogeado += OnUsuarioLogeadoHandler;
    }

    private void OnUsuarioLogeadoHandler(object? sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        servicioLogin.UsuarioLogeado -= OnUsuarioLogeadoHandler;
    }

    private void CerrarSesion()
    {
        servicioLogin.CerrarSesion();
        NavigationManager.NavigateTo("/");
    }

    private void IniciarSesion()
    {
        NavigationManager.NavigateTo("/login");
    }
}
