@page "/listadoeventos"
@rendermode InteractiveServer //Es necesario si queremos que el componente sea interactivo
@inject EventoDeportivoListarUseCase EventoDeportivoListarUseCase
@inject EventoDeportivoModificacionUseCase EventoDeportivoModificacionUseCase
@inject EventoDeportivoBajaUseCase EventoDeportivoBajaUseCase
@inject NavigationManager Navegador

<h3>Listado Eventos</h3>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Nombre</th> 
            <th>Descripcion</th> 
            <th>Fecha y Hora de Inicio</th>
            <th>Duracion en Horas</th>
            <th>Cupo Maximo</th>
            <th>Id del Responsable</th>
            <th>Acción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var evento in _lista) // Utilizamos la @ para cambiar de código HTML a C#
        {
            <tr>
                <td>@evento.Id</td>
                <td>@evento.Nombre</td>
                <td>@evento.Descripcion</td>
                <td>@evento.FechaHoraInicio</td>
                <td>@evento.DuracionHoras</td>
                <td>@evento.CupoMaximo</td>
                <td>@evento.ResponsableId</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>Editar(evento)">Editar</button>

                    <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(evento)">Eliminar</button>
                    <DialogoConfirmacion @ref=dialogo OnConfirmado="Eliminar" Mensaje="@_mensajeDialogo"/>

                </td>
            </tr>    
        }
    </tbody>
</table>

@code { // Sección de código C#

    List<EventoDeportivo> _lista = new List<EventoDeportivo>();
    protected override void OnInitialized()
    {
        _lista = EventoDeportivoListarUseCase.Ejecutar();
    }
    DialogoConfirmacion dialogo = null!;
    EventoDeportivo? _eventoParaEliminar = null;
    string _mensajeDialogo = string.Empty;
    private void Editar(EventoDeportivo evento)
    {
        Navegador.NavigateTo($"evento/{evento.Id}");
    }
    private void ConfirmarEliminacion(EventoDeportivo evento)
    {
        _eventoParaEliminar = evento;
        _mensajeDialogo = $"¿Desea eliminar el evento {evento.Id} {evento.Nombre}?";
        dialogo.Mostrar();
    }
    private void Eliminar()
    {
        if(_eventoParaEliminar != null)
        {
            EventoDeportivoBajaUseCase.Ejecutar(_eventoParaEliminar.Id,1);
            _lista = EventoDeportivoListarUseCase.Ejecutar(); //Se actualiza la lista de eventos
        }
    }
}
