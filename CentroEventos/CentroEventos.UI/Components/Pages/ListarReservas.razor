@page "/listadoreserva"
@rendermode InteractiveServer //Es necesario si queremos que el componente sea interactivo
@inject ReservaListarUseCase ReservaListarUseCase
@inject ReservaModificacionUseCase ReservaModificacionUseCase
@inject ReservaBajaUseCase ReservaBajaUseCase
@inject ServicioLogin servicioLogin
@inject NavigationManager Navegador

<h3>Listado Reservas</h3>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Id Persona</th> 
            <th>Id Eventos Deportivo</th> 
            <th>Fecha de alta</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var reserva in _lista) // Utilizamos la @ para cambiar de código HTML a C#
        {
            <tr>
                <td>@reserva.Id</td>
                <td>@reserva.Persona_id</td>
                <td>@reserva.EventoDeportivo_id</td>
                <td>@reserva.FechaAltaReserva</td>
                <td>@reserva.EstadoAsistencia</td>
                <td>
                    @if(servicioLogin.User.Permisos.Contains(Permiso.ReservaModificacion)) 
                    { 
                        <td><button class="btn btn-outline-primary" @onclick="()=>Editar(reserva)">Editar</button></td>
                    }
                    @if(servicioLogin.User.Permisos.Contains(Permiso.ReservaBaja)){      
                        <td><button class="btn btn-outline-danger" @onclick="()=>ConfirmarEliminacion(reserva)">Eliminar</button></td>
                        <DialogoConfirmacion @ref=dialogo OnConfirmado="Eliminar" Mensaje="@_mensajeDialogo"/>
                    }
                </td>
            </tr>    
        }
    </tbody>
</table>

@if (!string.IsNullOrEmpty(MensajeError)) //muestra el mensaje de error en pantalla
{
    <div class="alert alert-danger">@MensajeError</div>
}

@code { // Sección de código C#

    List<Reserva> _lista = new List<Reserva>();
    protected override void OnInitialized()
    {
        _lista = ReservaListarUseCase.Ejecutar();
    }
    DialogoConfirmacion dialogo = null!;
    Reserva? _EliminarReserva = null;
    string _mensajeDialogo = string.Empty;
    private void Editar(Reserva reserva)
    {
        Navegador.NavigateTo($"reserva/{reserva.Id}");
    }
    private void ConfirmarEliminacion(Reserva reserva)
    {
        _EliminarReserva = reserva;
        _mensajeDialogo = $"¿Desea eliminar la reserva {reserva.Id} {reserva.Persona_id}?";
        dialogo.Mostrar();
    }
    string? MensajeError; 
    private void Eliminar()
    {
        try
        {
            if(_EliminarReserva != null)
            {
                ReservaBajaUseCase.Ejecutar(_EliminarReserva.Id, servicioLogin.User.Id);
                _lista = ReservaListarUseCase.Ejecutar(); //Se actualiza la lista de eventos
                MensajeError = null; //Limpia el mensaje si todo sale bien
            }
        }
        catch (Exception ex)
        {
            MensajeError = ex.Message; //Guarda el mensaje de error
        }
        
    }
}
