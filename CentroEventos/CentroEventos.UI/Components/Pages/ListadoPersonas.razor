@page "/listadopersonas"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject NavigationManager Navegador
@inject PersonaListarUseCase personaListarUseCase
@inject PersonaBajaUseCase personaBajaUseCase
@inject ServicioLogin servicioLogin

<div class="text-center" style="padding-top: 30px;"><h3>Listado de Personas</h3></div>

<div style="margin: 30px;">
  <table class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>DNI</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Email</th>
            <th>Telefono</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var persona in _listaper ?? new List<Persona>())
        {
            <tr>
                <td> @persona.Id </td>
                <td>@persona.Dni</td>
                <td>@persona.Nombre</td>
                <td>@persona.Apellido</td>
                <td>@persona.Email</td>
                <td>@persona.Telefono</td>
                <td>
                    @if(servicioLogin.User != null){
                        if(servicioLogin.User.Permisos.Contains(Permiso.PersonaModificacion)) 
                        {   
                            <td><button class="btn btn-outline-primary" @onclick="()=>ModificarPersona(persona)">Editar</button></td>
                        }
                        if(servicioLogin.User.Permisos.Contains(Permiso.PersonaBaja))
                        {
                            <td><button class="btn btn-outline-danger" @onclick="()=>ConfirmarEliminacion(persona)">Eliminar</button></td>
                            <DialogoConfirmacion @ref="dialogo" OnConfirmado="Eliminar" Mensaje="@_mensaje"/>          
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
  </table>
</div>

@if (!string.IsNullOrEmpty(MensajeError)) //muestra el mensaje de error en pantalla
{
    <div class="alert alert-danger">@MensajeError</div>
}

@code {
    public List<Persona> _listaper = new List<Persona>();
    protected override void OnInitialized(){
        _listaper = personaListarUseCase.Ejecutar() ?? new List<Persona>();
    }
    DialogoConfirmacion dialogo = null!;
    Persona? personaElim = null;
    string _mensaje = string.Empty;
    
    private void ConfirmarEliminacion(Persona persona){

        personaElim = persona;
        _mensaje= $"Â¿Seguro que desea eliminar a {persona.Nombre} {persona.Apellido}?" ;
        
        dialogo.Mostrar();
    }
    string? MensajeError; 
    private void Eliminar()
    {
        try
        {
            if(personaElim != null)
            {
                personaBajaUseCase.Ejecutar(personaElim.Id,  servicioLogin.User!.Id);
                _listaper = personaListarUseCase.Ejecutar();
                MensajeError = null; //Limpia el mensaje si todo sale bien
            }
        } 
        catch (Exception ex)
        {
            MensajeError = ex.Message; //Guarda el mensaje de error
        }
    }
    void ModificarPersona(Persona persona)
    {
        Navegador.NavigateTo($"persona/{persona.Id}");
    }
}